import json
import boto3
import os
import traceback, configparser
from base64 import b64decode

# Initialize boto3 client at global scope for connection reuse
client = boto3.client('ssm')
ENCRYPTED = os.environ['DB_Password']
# Decrypt code should run once and variables stored outside of the function
# handler so that these are decrypted once per container
DB_URL = os.environ['DB_URL']
DB_Password = boto3.client('kms').decrypt(CiphertextBlob=b64decode(ENCRYPTED))['Plaintext'].decode('utf-8')

def lambda_handler(event, context):
    print("DB_URL :: " + DB_URL)
    print("DB_Password :: " + DB_Password)
    ## param created at ssm param store
    parameter = client.get_parameter(Name='db_passwrd', WithDecryption=True)
    print(parameter)
    return {
        'statusCode' : 200,
        'body' : json.dumps("Hello from Dummy Lambda Function!!")
    }
